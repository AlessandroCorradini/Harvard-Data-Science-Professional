knitr::opts_chunk$set(echo = TRUE)
mnist <- read_mnist()
library(dslabs)
mnist <- read_mnist()
ncol(mnist$train$images)
library(dslabs)
library(dplyr)
library(lubridate)
install.packages("lubridade")
library(dslabs)
library(dplyr)
library(lubridate)
library(dslabs)
library(dplyr)
library(lubridate)
library("lubridate", lib.loc="C:/Users/aless/Anaconda3/envs/rstudio/lib/R/library")
install.packages("lubridate")
library(dslabs)
library(dplyr)
library(lubridate)
data("reported_heights")
dat <- mutate(reported_heights, date_time = ymd_hms(time_stamp)) %>%
filter(date_time >= make_date(2016, 01, 25) & date_time < make_date(2016, 02, 1)) %>%
mutate(type = ifelse(day(date_time) == 25 & hour(date_time) == 8 & between(minute(date_time), 15, 30), "inclass","online")) %>%
select(sex, type)
y <- factor(dat$sex, c("Female", "Male"))
x <- dat$type
dat %>% group_by(type) %>% summarize(prop_female = mean(sex == "Female"))
y_hat <- ifelse(x == "online", "Male", "Female") %>%
factor(levels = levels(y))
mean(y_hat==y)
table(y_hat, y)
library(caret)
install.packages("reshape")
library(caret)
install.packages("reshape2")
library(caret)
install.packages("reshape2")
library("reshape2", lib.loc="C:/Users/aless/Anaconda3/envs/rstudio/lib/R/library")
library(caret)
knitr::opts_chunk$set(echo = TRUE)
library(caret)
sensitivity(y_hat, y)
library(caret)
specificity(y_hat, y)
mean(y == "Female")
library(caret)
data(iris)
iris <- iris[-which(iris$Species=='setosa'),]
y <- iris$Species
library(caret)
data(iris)
iris <- iris[-which(iris$Species=='setosa'),]
y <- iris$Species
set.seed(2)
# line of code
test <- iris[test_index,]
set.seed(2)
test_index <- createDataPartition(y,times=1,p=0.5,list=FALSE)
test <- iris[test_index,]
train <- iris[-test_index,]
library(caret)
data(iris)
iris <- iris[-which(iris$Species=='setosa'),]
y <- iris$Species
set.seed(2)
test_index <- createDataPartition(y,times=1,p=0.5,list=FALSE)
test <- iris[test_index,]
train <- iris[-test_index,]
func <- function(x){
rangedValues <- seq(range(x)[1],range(x)[2],by=0.1)
sapply(rangedValues,function(i){
y_hat <- ifelse(x>i,'virginica','versicolor')
mean(y_hat==train$Species)
})
}
predictions <- apply(train[,-5],2,func)
sapply(predictions,max)
predictions <- func(train[,3])
rangedValues <- seq(range(train[,3])[1],range(train[,3])[2],by=0.1)
cutoffs <-rangedValues[which(predictions==max(predictions))]
y_hat <- ifelse(test[,3]>cutoffs[1],'virginica','versicolor')
mean(y_hat==test$Species)
library(caret)
data(iris)
iris <- iris[-which(iris$Species=='setosa'),]
y <- iris$Species
plot(iris,pch=21,bg=iris$Species)
set.seed(2)
test_index <- createDataPartition(y,times=1,p=0.5,list=FALSE)
test <- iris[test_index,]
train <- iris[-test_index,]
petalLengthRange <- seq(range(train[,3])[1],range(train[,3])[2],by=0.1)
petalWidthRange <- seq(range(train[,4])[1],range(train[,4])[2],by=0.1)
cutoffs <- expand.grid(petalLengthRange,petalWidthRange)
id <- sapply(seq(nrow(cutoffs)),function(i){
y_hat <- ifelse(train[,3]>cutoffs[i,1] | train[,4]>cutoffs[i,2],'virginica','versicolor')
mean(y_hat==train$Species)
}) %>% which.max
library(caret)
library(dplyr)
data(iris)
iris <- iris[-which(iris$Species=='setosa'),]
y <- iris$Species
plot(iris,pch=21,bg=iris$Species)
set.seed(2)
test_index <- createDataPartition(y,times=1,p=0.5,list=FALSE)
test <- iris[test_index,]
train <- iris[-test_index,]
petalLengthRange <- seq(range(train[,3])[1],range(train[,3])[2],by=0.1)
petalWidthRange <- seq(range(train[,4])[1],range(train[,4])[2],by=0.1)
cutoffs <- expand.grid(petalLengthRange,petalWidthRange)
id <- sapply(seq(nrow(cutoffs)),function(i){
y_hat <- ifelse(train[,3]>cutoffs[i,1] | train[,4]>cutoffs[i,2],'virginica','versicolor')
mean(y_hat==train$Species)
}) %>% which.max
optimalCutoff <- cutoffs[id,] %>% as.numeric
y_hat <- ifelse(test[,3]>optimalCutoff[1] & test[,4]>optimalCutoff[2],'virginica','versicolor')
mean(y_hat==test$Species)
